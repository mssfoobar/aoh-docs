"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[1751],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>g});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),u=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},s="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),s=u(a),m=n,g=s["".concat(p,".").concat(m)]||s[m]||c[m]||l;return a?r.createElement(g,i(i({ref:e},d),{},{components:a})):r.createElement(g,i({ref:e},d))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:n,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},68535:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=a(87462),n=(a(67294),a(3905));const l={},i="Generic Table Widget",o={unversionedId:"web/api/charts/table",id:"web/api/charts/table",title:"Generic Table Widget",description:"This widget provides a dynamic and interactive table that displays data in a user-specified format while offering filtering and column grouping functionalities.",source:"@site/docs/40_web/20_api/30_charts/1. table.md",sourceDirName:"40_web/20_api/30_charts",slug:"/web/api/charts/table",permalink:"/aoh-docs/docs/web/api/charts/table",draft:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/40_web/20_api/30_charts/1. table.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"web",previous:{title:"Charts",permalink:"/aoh-docs/docs/category/charts"},next:{title:"Piechart with Progress bar",permalink:"/aoh-docs/docs/web/api/charts/piechartwithprogressbar"}},p={},u=[{value:"Data",id:"data",level:2},{value:"Properties",id:"properties",level:2},{value:"HeaderGroup type",id:"headergroup-type",level:3},{value:"1. Specify the datasource",id:"1-specify-the-datasource",level:3},{value:"2. Configure the row identifier.",id:"2-configure-the-row-identifier",level:3},{value:"3. Specify the category (Optional)",id:"3-specify-the-category-optional",level:3},{value:"4. Creating header groups and grouping columns",id:"4-creating-header-groups-and-grouping-columns",level:3}],d={toc:u},s="wrapper";function c(t){let{components:e,...l}=t;return(0,n.kt)(s,(0,r.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"generic-table-widget"},"Generic Table Widget"),(0,n.kt)("p",null,"This widget provides a dynamic and interactive table that displays data in a user-specified format while offering filtering and column grouping functionalities."),(0,n.kt)("br",null),(0,n.kt)("br",null),(0,n.kt)("h1",{id:"configuration"},"Configuration"),(0,n.kt)("h2",{id:"data"},"Data"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Title"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Title of the widget")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Datasource"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Table name of the data to display")))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Required"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ID"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Unique identifier of the row"),(0,n.kt)("td",{parentName:"tr",align:null},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Category"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"An attribute that allows the rows to be grouped"),(0,n.kt)("td",{parentName:"tr",align:null},"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Header Groups"),(0,n.kt)("td",{parentName:"tr",align:null},"HeaderGroup[]"),(0,n.kt)("td",{parentName:"tr",align:null},"Link multiple columns into a single group"),(0,n.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"For HeaderGroup type, Please refer below.")),(0,n.kt)("h3",{id:"headergroup-type"},"HeaderGroup type"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Members"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"label"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Serves as the label or name for the header group.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"attr"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Determines a column key from the datasource under the given header group.")))),(0,n.kt)("br",null),(0,n.kt)("br",null),(0,n.kt)("h1",{id:"how-to-use"},"How to use"),(0,n.kt)("p",null,"Assuming this is the content of your datasource named ",(0,n.kt)("em",{parentName:"p"},"aoh_charts_group_count_table")," and you wish to group the columns between calls."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"unit"),(0,n.kt)("th",{parentName:"tr",align:null},"department"),(0,n.kt)("th",{parentName:"tr",align:null},"total_calls"),(0,n.kt)("th",{parentName:"tr",align:null},"average_calls"),(0,n.kt)("th",{parentName:"tr",align:null},"open_cases"),(0,n.kt)("th",{parentName:"tr",align:null},"closed_cases"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"HQ SCDF"),(0,n.kt)("td",{parentName:"tr",align:null},"SCDF"),(0,n.kt)("td",{parentName:"tr",align:null},"100"),(0,n.kt)("td",{parentName:"tr",align:null},"19"),(0,n.kt)("td",{parentName:"tr",align:null},"200"),(0,n.kt)("td",{parentName:"tr",align:null},"50")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Old Police Academy"),(0,n.kt)("td",{parentName:"tr",align:null},"SPF"),(0,n.kt)("td",{parentName:"tr",align:null},"10"),(0,n.kt)("td",{parentName:"tr",align:null},"200"),(0,n.kt)("td",{parentName:"tr",align:null},"40"),(0,n.kt)("td",{parentName:"tr",align:null},"120")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"1st SCDF Div Queensway Camp"),(0,n.kt)("td",{parentName:"tr",align:null},"SCDF"),(0,n.kt)("td",{parentName:"tr",align:null},"10"),(0,n.kt)("td",{parentName:"tr",align:null},"5"),(0,n.kt)("td",{parentName:"tr",align:null},"4"),(0,n.kt)("td",{parentName:"tr",align:null},"3")))),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"1-specify-the-datasource"},"1. Specify the datasource"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Configuring the datasource",src:a(56238).Z,width:"621",height:"275"})),(0,n.kt)("p",null,"Select the datasource that you wish to display in the datsource dropdown"),(0,n.kt)("h3",{id:"2-configure-the-row-identifier"},"2. Configure the row identifier."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Alt text",src:a(81469).Z,width:"550",height:"245"})),(0,n.kt)("p",null,"Specify the column key of your table that identifies the row, This value will always be the first column on the table."),(0,n.kt)("h3",{id:"3-specify-the-category-optional"},"3. Specify the category (Optional)"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Alt text",src:a(55061).Z,width:"822",height:"374"})),(0,n.kt)("p",null,"If you want to group your rows based on a certain type, you may do so by specifying the column key that holds\nthe type. This will create a dropdown menu on the header that allows you to display your rows based on what it is grouped by."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"(If you do not specify this value, the dropdown menu will not appear)"),"."),(0,n.kt)("h3",{id:"4-creating-header-groups-and-grouping-columns"},"4. Creating header groups and grouping columns"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Alt text",src:a(10127).Z,width:"828",height:"405"})),(0,n.kt)("p",null,"You may then create the header groups and assign your datasource columns to the respective header group as you desire."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create the header group and give them a name."),(0,n.kt)("li",{parentName:"ul"},"Create an entry under the headergroup and assign them the column key to be associated with that header group"),(0,n.kt)("li",{parentName:"ul"},"You may rename the column header by assigning a label beside it. (optional)")),(0,n.kt)("p",null,"After completing the following instructions, the table will be displayed."))}c.isMDXComponent=!0},56238:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/table-1-fbbd34a77ac36cd438e10afb4c037925.png"},81469:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/table-2-f90d6ef32c0e135769c3dd6fa8d6b578.png"},55061:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/table-3-9d9e3e7dbdbcb8144dfb5a5fa79192c2.png"},10127:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/table-4-f10948f6b84e72a59d37d6b20eec1494.png"}}]);