"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[8706],{7452:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var i=r(74848),n=r(28453);const s={},d="Generic Table Widget",a={id:"modules/web/api/charts/table",title:"Generic Table Widget",description:"This widget provides a dynamic and interactive table that displays data in a user-specified format while offering filtering and column grouping functionalities.",source:"@site/docs/40_modules/20_web/20_api/30_charts/1. table.md",sourceDirName:"40_modules/20_web/20_api/30_charts",slug:"/modules/web/api/charts/table",permalink:"/aoh-docs/docs/modules/web/api/charts/table",draft:!1,unlisted:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/40_modules/20_web/20_api/30_charts/1. table.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"web",previous:{title:"Charts",permalink:"/aoh-docs/docs/category/charts"},next:{title:"Piechart with Progress bar",permalink:"/aoh-docs/docs/modules/web/api/charts/piechartwithprogressbar"}},l={},h=[{value:"Data",id:"data",level:2},{value:"Properties",id:"properties",level:2},{value:"HeaderGroup type",id:"headergroup-type",level:3},{value:"1. Specify the datasource",id:"1-specify-the-datasource",level:3},{value:"2. Configure the row identifier.",id:"2-configure-the-row-identifier",level:3},{value:"3. Specify the category (Optional)",id:"3-specify-the-category-optional",level:3},{value:"4. Creating header groups and grouping columns",id:"4-creating-header-groups-and-grouping-columns",level:3}];function c(e){const t={em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"generic-table-widget",children:"Generic Table Widget"}),"\n",(0,i.jsx)(t.p,{children:"This widget provides a dynamic and interactive table that displays data in a user-specified format while offering filtering and column grouping functionalities."}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.h1,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(t.h2,{id:"data",children:"Data"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Title"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Title of the widget"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Datasource"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Table name of the data to display"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Required"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ID"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Unique identifier of the row"}),(0,i.jsx)(t.td,{children:"Yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Category"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"An attribute that allows the rows to be grouped"}),(0,i.jsx)(t.td,{children:"No"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Header Groups"}),(0,i.jsx)(t.td,{children:"HeaderGroup[]"}),(0,i.jsx)(t.td,{children:"Link multiple columns into a single group"}),(0,i.jsx)(t.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"For HeaderGroup type, Please refer below."})}),"\n",(0,i.jsx)(t.h3,{id:"headergroup-type",children:"HeaderGroup type"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Members"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"label"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Serves as the label or name for the header group."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"attr"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Determines a column key from the datasource under the given header group."})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.h1,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsxs)(t.p,{children:["Assuming this is the content of your datasource named ",(0,i.jsx)(t.em,{children:"aoh_charts_group_count_table"})," and you wish to group the columns between calls."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"unit"}),(0,i.jsx)(t.th,{children:"department"}),(0,i.jsx)(t.th,{children:"total_calls"}),(0,i.jsx)(t.th,{children:"average_calls"}),(0,i.jsx)(t.th,{children:"open_cases"}),(0,i.jsx)(t.th,{children:"closed_cases"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"HQ SCDF"}),(0,i.jsx)(t.td,{children:"SCDF"}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"19"}),(0,i.jsx)(t.td,{children:"200"}),(0,i.jsx)(t.td,{children:"50"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Old Police Academy"}),(0,i.jsx)(t.td,{children:"SPF"}),(0,i.jsx)(t.td,{children:"10"}),(0,i.jsx)(t.td,{children:"200"}),(0,i.jsx)(t.td,{children:"40"}),(0,i.jsx)(t.td,{children:"120"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"1st SCDF Div Queensway Camp"}),(0,i.jsx)(t.td,{children:"SCDF"}),(0,i.jsx)(t.td,{children:"10"}),(0,i.jsx)(t.td,{children:"5"}),(0,i.jsx)(t.td,{children:"4"}),(0,i.jsx)(t.td,{children:"3"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.h3,{id:"1-specify-the-datasource",children:"1. Specify the datasource"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Configuring the datasource",src:r(78001).A+"",width:"621",height:"275"})}),"\n",(0,i.jsx)(t.p,{children:"Select the datasource that you wish to display in the datsource dropdown"}),"\n",(0,i.jsx)(t.h3,{id:"2-configure-the-row-identifier",children:"2. Configure the row identifier."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Alt text",src:r(47834).A+"",width:"550",height:"245"})}),"\n",(0,i.jsx)(t.p,{children:"Specify the column key of your table that identifies the row, This value will always be the first column on the table."}),"\n",(0,i.jsx)(t.h3,{id:"3-specify-the-category-optional",children:"3. Specify the category (Optional)"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Alt text",src:r(49059).A+"",width:"822",height:"374"})}),"\n",(0,i.jsx)(t.p,{children:"If you want to group your rows based on a certain type, you may do so by specifying the column key that holds\nthe type. This will create a dropdown menu on the header that allows you to display your rows based on what it is grouped by."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"(If you do not specify this value, the dropdown menu will not appear)"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"4-creating-header-groups-and-grouping-columns",children:"4. Creating header groups and grouping columns"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Alt text",src:r(18892).A+"",width:"828",height:"405"})}),"\n",(0,i.jsx)(t.p,{children:"You may then create the header groups and assign your datasource columns to the respective header group as you desire."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Create the header group and give them a name."}),"\n",(0,i.jsx)(t.li,{children:"Create an entry under the headergroup and assign them the column key to be associated with that header group"}),"\n",(0,i.jsx)(t.li,{children:"You may rename the column header by assigning a label beside it. (optional)"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"After completing the following instructions, the table will be displayed."})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},78001:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/table-1-fbbd34a77ac36cd438e10afb4c037925.png"},47834:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/table-2-f90d6ef32c0e135769c3dd6fa8d6b578.png"},49059:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/table-3-9d9e3e7dbdbcb8144dfb5a5fa79192c2.png"},18892:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/table-4-f10948f6b84e72a59d37d6b20eec1494.png"},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>a});var i=r(96540);const n={},s=i.createContext(n);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);