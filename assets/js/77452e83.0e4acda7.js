"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[7821],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},26603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={sidebar_position:5},a="Introduction",p={unversionedId:"development/devops_onboard/intro",id:"development/devops_onboard/intro",title:"Introduction",description:"This section provides a detailed description of how services are initially setup and configured for CI/CD in AGIL Ops Hub.",source:"@site/docs/20_development/51_devops_onboard/05-intro.md",sourceDirName:"20_development/51_devops_onboard",slug:"/development/devops_onboard/intro",permalink:"/aoh-docs/docs/development/devops_onboard/intro",draft:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/20_development/51_devops_onboard/05-intro.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"development",previous:{title:"\ud83c\udf10 DevOps (onboarding new service)",permalink:"/aoh-docs/docs/category/-devops-onboarding-new-service"},next:{title:"Setup Service Infra Repository",permalink:"/aoh-docs/docs/development/devops_onboard/setup-service-infra"}},s={},c=[{value:"Setup Service CI pipeline",id:"setup-service-ci-pipeline",level:2}],l={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This section provides a detailed description of how services are ",(0,o.kt)("em",{parentName:"p"},"initially")," setup and configured for CI/CD in AGIL Ops Hub."),(0,o.kt)("h2",{id:"setup-service-ci-pipeline"},"Setup Service CI pipeline"),(0,o.kt)("p",null,"The outputs of the CI pipeline that facilitates CD are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"building and publishing of the container image to the container registry"),(0,o.kt)("li",{parentName:"ul"},"updating the service's infra repository on the updated container image")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows")," folder in the service source-code repository (created from the template) contains GitHub actions to produce these outputs. It is configured to :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"build your service into a container image and publish this container image. The workflow currently publishes to ghcr.io (GitHub container registry)."),(0,o.kt)("li",{parentName:"ul"},"update the ",(0,o.kt)("inlineCode",{parentName:"li"},"Service Infra Repository")," (to be setup in the following step) with the new container image.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This is for the initial setup only.\nFurther customizations, such as the introduction of additional parameters for the service application could require modifications to this github workflow.")))}u.isMDXComponent=!0}}]);