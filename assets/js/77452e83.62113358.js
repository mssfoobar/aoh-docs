"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[0],{44830:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var n=i(74848),t=i(28453);const r={sidebar_position:5},s="Introduction",d={id:"development/devops_onboard/intro",title:"Introduction",description:"This section provides a detailed description of how services are initially setup and configured for CI/CD in AGIL Ops Hub.",source:"@site/docs/20_development/51_devops_onboard/05-intro.md",sourceDirName:"20_development/51_devops_onboard",slug:"/development/devops_onboard/intro",permalink:"/aoh-docs/docs/development/devops_onboard/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/20_development/51_devops_onboard/05-intro.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"development",previous:{title:"\ud83c\udf10 DevOps (onboarding new service)",permalink:"/aoh-docs/docs/category/-devops-onboarding-new-service"},next:{title:"Setup Service Infra Repository",permalink:"/aoh-docs/docs/development/devops_onboard/setup-service-infra"}},c={},a=[{value:"Setup Service CI pipeline",id:"setup-service-ci-pipeline",level:2}];function p(e){const o={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(o.p,{children:["This section provides a detailed description of how services are ",(0,n.jsx)(o.em,{children:"initially"})," setup and configured for CI/CD in AGIL Ops Hub."]}),"\n",(0,n.jsx)(o.h2,{id:"setup-service-ci-pipeline",children:"Setup Service CI pipeline"}),"\n",(0,n.jsx)(o.p,{children:"The outputs of the CI pipeline that facilitates CD are:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"building and publishing of the container image to the container registry"}),"\n",(0,n.jsx)(o.li,{children:"updating the service's infra repository on the updated container image"}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["The ",(0,n.jsx)(o.code,{children:".github/workflows"})," folder in the service source-code repository (created from the template) contains GitHub actions to produce these outputs. It is configured to :"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"build your service into a container image and publish this container image. The workflow currently publishes to ghcr.io (GitHub container registry)."}),"\n",(0,n.jsxs)(o.li,{children:["update the ",(0,n.jsx)(o.code,{children:"Service Infra Repository"})," (to be setup in the following step) with the new container image."]}),"\n"]}),"\n",(0,n.jsx)(o.admonition,{type:"note",children:(0,n.jsx)(o.p,{children:"This is for the initial setup only.\nFurther customizations, such as the introduction of additional parameters for the service application could require modifications to this github workflow."})})]})}function l(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,o,i)=>{i.d(o,{R:()=>s,x:()=>d});var n=i(96540);const t={},r=n.createContext(t);function s(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);