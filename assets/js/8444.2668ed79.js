(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[8444],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=i(r),m=o,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||s;return r?n.createElement(d,a(a({ref:t},u),{},{components:r})):n.createElement(d,a({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[f]="string"==typeof e?e:o,a[1]=c;for(var i=2;i<s;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},79107:(e,t,r)=>{"use strict";r.d(t,{C:()=>c,n:()=>a});var n=r(67294),o=r(43768);const s=n.createContext(null);function a(e){let{children:t,content:r,isBlogPostPage:o=!1}=e;const a=function(e){let{content:t,isBlogPostPage:r}=e;return(0,n.useMemo)((()=>({metadata:t.metadata,frontMatter:t.frontMatter,assets:t.assets,toc:t.toc,isBlogPostPage:r})),[t,r])}({content:r,isBlogPostPage:o});return n.createElement(s.Provider,{value:a},t)}function c(){const e=(0,n.useContext)(s);if(null===e)throw new o.i6("BlogPostProvider");return e}},52144:(e,t,r)=>{"use strict";r.d(t,{F:()=>c});var n=r(67294),o=r(43768);const s={attributes:!0,characterData:!0,childList:!0,subtree:!0};function a(e,t){const[r,a]=(0,n.useState)(),c=(0,n.useCallback)((()=>{a(e.current?.closest("[role=tabpanel][hidden]"))}),[e,a]);(0,n.useEffect)((()=>{c()}),[c]),function(e,t,r){void 0===r&&(r=s);const a=(0,o.zX)(t),c=(0,o.Ql)(r);(0,n.useEffect)((()=>{const t=new MutationObserver(a);return e&&t.observe(e,c),()=>t.disconnect()}),[e,a,c])}(r,(e=>{e.forEach((e=>{"attributes"===e.type&&"hidden"===e.attributeName&&(t(),c())}))}),{attributes:!0,characterData:!1,childList:!1,subtree:!1})}function c(){const[e,t]=(0,n.useState)(!1),[r,o]=(0,n.useState)(!1),s=(0,n.useRef)(null),c=(0,n.useCallback)((()=>{const r=s.current.querySelector("code");e?r.removeAttribute("style"):(r.style.whiteSpace="pre-wrap",r.style.overflowWrap="anywhere"),t((e=>!e))}),[s,e]),l=(0,n.useCallback)((()=>{const{scrollWidth:e,clientWidth:t}=s.current,r=e>t||s.current.querySelector("code").hasAttribute("style");o(r)}),[s]);return a(s,l),(0,n.useEffect)((()=>{l()}),[e,l]),(0,n.useEffect)((()=>(window.addEventListener("resize",l,{passive:!0}),()=>{window.removeEventListener("resize",l)})),[l]),{codeBlockRef:s,isEnabled:e,isCodeScrollable:r,toggle:c}}},4779:(e,t,r)=>{"use strict";r.d(t,{p:()=>s});var n=r(9200),o=r(20107);function s(){const{prism:e}=(0,o.L)(),{colorMode:t}=(0,n.I)(),r=e.theme,s=e.darkTheme||r;return"dark"===t?s:r}},82940:(e,t,r)=>{"use strict";r.d(t,{QC:()=>m,Vo:()=>f,bc:()=>i,nZ:()=>p,nt:()=>u});var n=r(87594),o=r.n(n);const s=/title=(?<quote>["'])(?<title>.*?)\1/,a=/\{(?<range>[\d,-]+)\}/,c={js:{start:"\\/\\/",end:""},jsBlock:{start:"\\/\\*",end:"\\*\\/"},jsx:{start:"\\{\\s*\\/\\*",end:"\\*\\/\\s*\\}"},bash:{start:"#",end:""},html:{start:"\x3c!--",end:"--\x3e"}};function l(e,t){const r=e.map((e=>{const{start:r,end:n}=c[e];return`(?:${r}\\s*(${t.flatMap((e=>[e.line,e.block?.start,e.block?.end].filter(Boolean))).join("|")})\\s*${n})`})).join("|");return new RegExp(`^\\s*(?:${r})\\s*$`)}function i(e){return e?.match(s)?.groups.title??""}function u(e){return Boolean(e?.includes("showLineNumbers"))}function f(e){const t=e.split(" ").find((e=>e.startsWith("language-")));return t?.replace(/language-/,"")}function p(e,t){let r=e.replace(/\n$/,"");const{language:n,magicComments:s,metastring:i}=t;if(i&&a.test(i)){const e=i.match(a).groups.range;if(0===s.length)throw new Error(`A highlight range has been given in code block's metastring (\`\`\` ${i}), but no magic comment config is available. Docusaurus applies the first magic comment entry's className for metastring ranges.`);const t=s[0].className,n=o()(e).filter((e=>e>0)).map((e=>[e-1,[t]]));return{lineClassNames:Object.fromEntries(n),code:r}}if(void 0===n)return{lineClassNames:{},code:r};const u=function(e,t){switch(e){case"js":case"javascript":case"ts":case"typescript":return l(["js","jsBlock"],t);case"jsx":case"tsx":return l(["js","jsBlock","jsx"],t);case"html":return l(["js","jsBlock","html"],t);case"python":case"py":case"bash":return l(["bash"],t);case"markdown":case"md":return l(["html","jsx","bash"],t);default:return l(Object.keys(c),t)}}(n,s),f=r.split("\n"),p=Object.fromEntries(s.map((e=>[e.className,{start:0,range:""}]))),m=Object.fromEntries(s.filter((e=>e.line)).map((e=>{let{className:t,line:r}=e;return[r,t]}))),d=Object.fromEntries(s.filter((e=>e.block)).map((e=>{let{className:t,block:r}=e;return[r.start,t]}))),h=Object.fromEntries(s.filter((e=>e.block)).map((e=>{let{className:t,block:r}=e;return[r.end,t]})));for(let o=0;o<f.length;){const e=f[o].match(u);if(!e){o+=1;continue}const t=e.slice(1).find((e=>void 0!==e));m[t]?p[m[t]].range+=`${o},`:d[t]?p[d[t]].start=o:h[t]&&(p[h[t]].range+=`${p[h[t]].start}-${o-1},`),f.splice(o,1)}r=f.join("\n");const g={};return Object.entries(p).forEach((e=>{let[t,{range:r}]=e;o()(r).forEach((e=>{g[e]??=[],g[e].push(t)}))})),{lineClassNames:g,code:r}}function m(e){const t={color:"--prism-color",backgroundColor:"--prism-background-color"},r={};return Object.entries(e.plain).forEach((e=>{let[n,o]=e;const s=t[n];s&&"string"==typeof o&&(r[s]=o)})),r}},23777:(e,t,r)=>{"use strict";r.d(t,{c:()=>u});var n=r(67294),o=r(39962),s=r(25108);const a=["zero","one","two","few","many","other"];function c(e){return a.filter((t=>e.includes(t)))}const l={locale:"en",pluralForms:c(["one","other"]),select:e=>1===e?"one":"other"};function i(){const{i18n:{currentLocale:e}}=(0,o.Z)();return(0,n.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:c(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return s.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}}),[e])}function u(){const e=i();return{selectMessage:(t,r)=>function(e,t,r){const n=e.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&s.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);const o=r.select(t),a=r.pluralForms.indexOf(o);return n[Math.min(a,n.length-1)]}(r,t,e)}}},87594:(e,t)=>{function r(e){let t,r=[];for(let n of e.split(",").map((e=>e.trim())))if(/^-?\d+$/.test(n))r.push(parseInt(n,10));else if(t=n.match(/^(-?\d+)(-|\.\.\.?|\u2025|\u2026|\u22EF)(-?\d+)$/)){let[e,n,o,s]=t;if(n&&s){n=parseInt(n),s=parseInt(s);const e=n<s?1:-1;"-"!==o&&".."!==o&&"\u2025"!==o||(s+=e);for(let t=n;t!==s;t+=e)r.push(t)}}return r}t.default=r,e.exports=r}}]);