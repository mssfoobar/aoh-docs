"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[5535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),f=o,m=c["".concat(u,".").concat(f)]||c[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},10935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:20},i="Pre-requisites",l={unversionedId:"deployment/pre-requisites",id:"deployment/pre-requisites",title:"Pre-requisites",description:"// TODO: Create infra repo template (based on ar2-infra)",source:"@site/docs/deployment/20-pre-requisites.md",sourceDirName:"deployment",slug:"/deployment/pre-requisites",permalink:"/aoh-docs/docs/deployment/pre-requisites",draft:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/deployment/20-pre-requisites.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"deployment",previous:{title:"Overview",permalink:"/aoh-docs/docs/deployment/overview"},next:{title:"Infra platform",permalink:"/aoh-docs/docs/category/infra-platform"}},u={},p=[{value:"Software for installation client:",id:"software-for-installation-client",level:2},{value:"Configuration",id:"configuration",level:2}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pre-requisites"},"Pre-requisites"),(0,o.kt)("p",null,"// TODO: Create infra repo template (based on ar2-infra)"),(0,o.kt)("p",null,"Firewall requirement:"),(0,o.kt)("p",null,"Name\t                inbound/outbound     Port\t  type\nAPPS/Web\t            (inbound)            443\t  TCP\nAPPS/Web/cloudwatch\t  (outbound)           443\t  TCP\nAPPS\t                (outbound)           3478\t  UDP\nAPPS\t                (outbound)           5000\t  UDP\nAPPS\t                (outbound)           3478\t  TCP\nCloudwatch\t          (outbound)           443\t  TCP\nStun server\t          (inbound)            3478\t  UDP\nSFU TCP\t              (inbound)            3478\t  TCP\nSFU UDP\t              (inbound)            5000\t  UDP\nDatabase\t            (outbound)           5432\t  TCP"),(0,o.kt)("h2",{id:"software-for-installation-client"},"Software for installation client:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Aws CLI"),(0,o.kt)("li",{parentName:"ul"},"Terraform"),(0,o.kt)("li",{parentName:"ul"},"Kubectl"),(0,o.kt)("li",{parentName:"ul"},"Helm")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"AWS account and profile"),(0,o.kt)("p",null,"To set profile:"),(0,o.kt)("p",null,"For windows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"setx AWS_PROFILE <clustername>\naws eks update-kubeconfig --region ap-southeast-1  --name <clustername>\n")),(0,o.kt)("p",null,"For linux:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export AWS_PROFILE=soh-qa\naws eks update-kubeconfig --region ap-southeast-1  --name <clustername>\n")))}c.isMDXComponent=!0}}]);