"use strict";(self.webpackChunkar2_documentation=self.webpackChunkar2_documentation||[]).push([[4952],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),g=s(n),c=a,d=g["".concat(l,".").concat(c)]||g[c]||u[c]||r;return n?i.createElement(d,o(o({ref:t},m),{},{components:n})):i.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[g]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},76722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const r={},o="Signing Commits",p={unversionedId:"source_management/verified_commits",id:"source_management/verified_commits",title:"Signing Commits",description:"To sign commits that are valid under GitHub's rules - you must use a GPG Keypair. Signing commits allows us to verify",source:"@site/docs/source_management/verified_commits.md",sourceDirName:"source_management",slug:"/source_management/verified_commits",permalink:"/ar2-docs/docs/source_management/verified_commits",draft:!1,editUrl:"https://github.com/mssfoobar/ar2-docs/tree/main/docs/source_management/verified_commits.md",tags:[],version:"current",frontMatter:{},sidebar:"source_management"},l={},s=[{value:"Listing your existing GPG keys",id:"listing-your-existing-gpg-keys",level:2},{value:"2. Generate a GPG Keypair",id:"2-generate-a-gpg-keypair",level:2},{value:"3. Set up GPG Public Key",id:"3-set-up-gpg-public-key",level:2},{value:"4. GPG key ID is located after <code>sec rsa4096/</code>",id:"4-gpg-key-id-is-located-after-sec-rsa4096",level:2},{value:"5. Add GPG public key to GitHub",id:"5-add-gpg-public-key-to-github",level:2},{value:"6. Set up private key",id:"6-set-up-private-key",level:2},{value:"Migrating GPG Keypairs",id:"migrating-gpg-keypairs",level:2},{value:"Deleting GPG Keypairs",id:"deleting-gpg-keypairs",level:2}],m={toc:s};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signing-commits"},"Signing Commits"),(0,a.kt)("p",null,"To sign commits that are valid under GitHub's rules - you must use a GPG Keypair. Signing commits allows us to verify\nthat commits are made by the user that's committing them."),(0,a.kt)("p",null,"Ideally, all branches should be protected to require commits to be signed. This can be done by ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches#require-signed-commits"},"configuring GitHub's\nbranch protection rules")," to ensure commits are only allowed when they have been verified with a\nGPG signature. The following section explains how you can set your computer up with a GPG keypair to sign your git\ncommits."),(0,a.kt)("h2",{id:"listing-your-existing-gpg-keys"},"Listing your existing GPG keys"),(0,a.kt)("p",null,"To list existing GPG keys on the machine:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --list-secret-keys --keyid-format=long\n")),(0,a.kt)("p",null,"This will be useful, especially when you need to view the Key ID (used in many of the following commands)."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/checking-for-existing-gpg-keys"},"reference")," for more information.")),(0,a.kt)("h2",{id:"2-generate-a-gpg-keypair"},"2. Generate a GPG Keypair"),(0,a.kt)("p",null,"To generate new GPG key on the machine:"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key"},"reference")," for more information.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --full-generate-key\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"(1) RSA and RSA (default)")," When prompted on what kind of key you want."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"4096")," when prompted on what keysize you want."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"0")," when prompted how long the key should be valid so that it does not expire (unless you wish to commit to a\ndifferent policy)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"(y)")," to confirm that the key does not expire if you picked ",(0,a.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<your name>")," when asked for you name. This does not need to match the commit name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<email address>")," when asked for your email, this must match the commit email address."),(0,a.kt)("li",{parentName:"ul"},"(Optional) Key in some comments to tag on to this key."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"O")," for Okey when you're done."),(0,a.kt)("li",{parentName:"ul"},"A dialogue box will appear - key in your passphrase for the key - you ",(0,a.kt)("b",null,"MUST")," remember this passphrase and use it\neverytime to sign a commit. You will be asked to key the passphrase in again to confirm.")),(0,a.kt)("h2",{id:"3-set-up-gpg-public-key"},"3. Set up GPG Public Key"),(0,a.kt)("p",null,"Retrieve the GPG public key to view it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --list-secret-keys --keyid-format=long\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key"},"reference")," for more information.")),(0,a.kt)("h2",{id:"4-gpg-key-id-is-located-after-sec-rsa4096"},"4. GPG key ID is located after ",(0,a.kt)("inlineCode",{parentName:"h2"},"sec rsa4096/")),(0,a.kt)("p",null,"Print the GPG key ID in ASCII armor format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --armor --export <key-ID>\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key"},"reference")," for more information.")),(0,a.kt)("h2",{id:"5-add-gpg-public-key-to-github"},"5. Add GPG public key to GitHub"),(0,a.kt)("p",null,"Copy the entire output from ",(0,a.kt)("a",{parentName:"p",href:"#4-gpg-key-id-is-located-after-sec-rsa4096"},"4")," into your ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/settings/keys"},"GitHub account's settings > keys")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-gpg-key-to-your-github-account"},"reference")," for more information.")),(0,a.kt)("h2",{id:"6-set-up-private-key"},"6. Set up private key"),(0,a.kt)("p",null,"Edit the global ",(0,a.kt)("inlineCode",{parentName:"p"},".gitconfig")," or for each repository, edit ",(0,a.kt)("inlineCode",{parentName:"p"},".git/config"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[user]\n    email = <commit email>\n    signingkey = <key-ID>\n[commit]\n    gpgsign = true\n")),(0,a.kt)("p",null,"Alternatively, you can use the following commands to edit your git config from the terminal."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},' git config user.email "<commit email>"\n git config user.signingkey "<key-ID>"\n git config commit.gpgsign true\n')),(0,a.kt)("p",null,"You can add the ",(0,a.kt)("inlineCode",{parentName:"p"},"--global")," flag to modify the settings globally (for any repo in your machine)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},' git config --global user.email "<commit email>"\n git config --global user.signingkey "<key-ID>"\n git config --global commit.gpgsign true\n')),(0,a.kt)("p",null,"Subsequently, every time you commit, you will be prompted for a passphrase."),(0,a.kt)("h2",{id:"migrating-gpg-keypairs"},"Migrating GPG Keypairs"),(0,a.kt)("p",null,"To export the keypairs from your PC:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --export <key-ID> > public_keys.pgp\ngpg --export-secret-keys <key-ID> > private_keys.pgp\n")),(0,a.kt)("p",null,"To import the keypairs to your other PC:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gpg --import < public_keys.pgp\ngpg --import < private_keys.pgp\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://makandracards.com/makandra-orga/37763-gpg-extract-private-key-and-import-on-different-machine"},"reference")," for more information.")),(0,a.kt)("h2",{id:"deleting-gpg-keypairs"},"Deleting GPG Keypairs"),(0,a.kt)("p",null,"To delete the keypairs from your PC:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gpg --delete-secret-key <key-ID>\ngpg --delete-key <key-ID>\n")),(0,a.kt)("p",null,"Or just delete the ",(0,a.kt)("inlineCode",{parentName:"p"},".gnupg")," file. On Windows machines, it should be at ",(0,a.kt)("inlineCode",{parentName:"p"},"%USERPROFILE%/.gnupg"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See this ",(0,a.kt)("a",{parentName:"p",href:"https://blog.chapagain.com.np/gpg-remove-keys-from-your-public-keyring/"},"reference")," for more information.")))}g.isMDXComponent=!0}}]);