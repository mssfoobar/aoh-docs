"use strict";(self.webpackChunkaoh_documentation=self.webpackChunkaoh_documentation||[]).push([[2377],{94707:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(74848),o=r(28453);const a={sidebar_position:30},i="Setup Platform infrastructure",s={id:"deployment/platform-infra/AWS-EKS/setup-platform-infra",title:"Setup Platform infrastructure",description:"AWS",source:"@site/docs/30_deployment/50-platform-infra/AWS-EKS/30-setup-platform-infra.md",sourceDirName:"30_deployment/50-platform-infra/AWS-EKS",slug:"/deployment/platform-infra/AWS-EKS/setup-platform-infra",permalink:"/aoh-docs/docs/deployment/platform-infra/AWS-EKS/setup-platform-infra",draft:!1,unlisted:!1,editUrl:"https://github.com/mssfoobar/aoh-docs/tree/main/docs/30_deployment/50-platform-infra/AWS-EKS/30-setup-platform-infra.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"deployment",previous:{title:"AWS - EKS",permalink:"/aoh-docs/docs/category/aws---eks"},next:{title:"Configure Platform Services",permalink:"/aoh-docs/docs/deployment/platform-infra/AWS-EKS/configure-platform-services"}},c={},l=[{value:"AWS",id:"aws",level:2},{value:"Preparation:",id:"preparation",level:3},{value:"Execution:",id:"execution",level:3},{value:"AWS - Database (If required)",id:"aws---database-if-required",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"setup-platform-infrastructure",children:"Setup Platform infrastructure"}),"\n",(0,n.jsx)(t.h2,{id:"aws",children:"AWS"}),"\n",(0,n.jsx)(t.h3,{id:"preparation",children:"Preparation:"}),"\n",(0,n.jsxs)(t.p,{children:["go to  ",(0,n.jsx)(t.code,{children:"/ar2-infra/terraform/terraform-aws-eks-blueprints-v4/deployment/<yourclustername> /main.tf"})]}),"\n",(0,n.jsx)(t.p,{children:"search for the line containing this:\n'#aoh: name of ec2 instances. (TO CHANGE)'"}),"\n",(0,n.jsx)(t.p,{children:'Change the "initial_xxx_dev" to a name of your choosing, for example "AOH_nodes".\nThe terraform scripts will then generate your worker nodes with names that you chose. This has no functional function.'}),"\n",(0,n.jsx)(t.h3,{id:"execution",children:"Execution:"}),"\n",(0,n.jsxs)(t.p,{children:["Go  to:\n",(0,n.jsx)(t.code,{children:"/ar2-infra/terraform/terraform-aws-eks-blueprints-v4/deployment/<yourclustername>"})]}),"\n",(0,n.jsxs)(t.p,{children:["Execute ",(0,n.jsx)(t.code,{children:"terraform apply"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Wait for 40 minutes"}),"\n",(0,n.jsx)(t.p,{children:"NOTE 1: if there is a previous terraform state within the folder or the s3 bucket, the terraform scripts may require you to revolve the state difference before proceeding\nNOTE 2: If the terraform scipt is complaining that the Dynamo DB table name already existed, it can be resolved by using another Dynamo DB table."}),"\n",(0,n.jsx)(t.h2,{id:"aws---database-if-required",children:"AWS - Database (If required)"}),"\n",(0,n.jsx)(t.p,{children:"Setup the AWS RDS if you choose to use instead the RDS for your project"})]})}function f(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(96540);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);