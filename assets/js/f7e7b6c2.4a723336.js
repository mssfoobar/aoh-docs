"use strict";(self.webpackChunkar2_documentation=self.webpackChunkar2_documentation||[]).push([[7084],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},11354:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const i={sidebar_position:3},a="Deployment \ud83c\udf0e",l={unversionedId:"comms/guides/deployment",id:"comms/guides/deployment",title:"Deployment \ud83c\udf0e",description:"CI/CD Pipeline",source:"@site/docs/comms/guides/deployment.md",sourceDirName:"comms/guides",slug:"/comms/guides/deployment",permalink:"/ar2-docs/docs/comms/guides/deployment",draft:!1,editUrl:"https://github.com/mssfoobar/ar2-docs/tree/main/docs/comms/guides/deployment.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"comms",previous:{title:"Nats",permalink:"/ar2-docs/docs/comms/guides/nats"},next:{title:"Testing \ud83d\udd27",permalink:"/ar2-docs/docs/comms/guides/testing"}},c={},s=[{value:"CI/CD Pipeline",id:"cicd-pipeline",level:2}],p={toc:s};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deployment-"},"Deployment \ud83c\udf0e"),(0,o.kt)("h2",{id:"cicd-pipeline"},"CI/CD Pipeline"),(0,o.kt)("p",null,"Every commit to main branch will trigger the github action workflow."),(0,o.kt)("p",null,"Following actions will be triggered by workflow"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"build & push the images into ghcr (github container registry)"),(0,o.kt)("li",{parentName:"ul"},"update the image tags in manifest files of staging server")),(0,o.kt)("p",null,"Refer to ",(0,o.kt)("inlineCode",{parentName:"p"},"deployment.yml")," inside ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows")," for more details."))}m.isMDXComponent=!0}}]);